name: Docker image
on:
  push:
    paths: [ 'src/**', 'Dockerfile', 'helm/**' ]
jobs:
  build:
    runs-on: ubuntu-latest
    steps:
    - name: Checkout repository
      uses: actions/checkout@v4

    - name: Set up Docker Buildx
      uses: docker/setup-buildx-action@v3

    - name: Log in to Docker Hub
      uses: docker/login-action@v3
      with:
        username: ${{ secrets.DOCKER_USERNAME }}
        password: ${{ secrets.DOCKER_PASSWORD }}

    - name: Read git revision for tagging
      id: tag
      run: echo "value=$(git describe --tags --always)" >> $GITHUB_OUTPUT

    - name: Build Docker image
      if: github.ref != 'refs/heads/main'
      uses: docker/build-push-action@v6
      with:
        context: .
        load: true
        tags: octaviorichter/grepr-hello:${{ steps.tag.outputs.value }}

    - name: Build and push Docker image
      if: github.ref == 'refs/heads/main'
      uses: docker/build-push-action@v6
      with:
        context: .
        push: true
        tags: octaviorichter/grepr-hello:${{ steps.tag.outputs.value }}

  deploy:
    needs: build
    runs-on: ubuntu-latest
    if: github.ref == 'refs/heads/main'
    steps:
    - name: Checkout repository
      uses: actions/checkout@v4

    - name: Configure AWS credentials
      uses: aws-actions/configure-aws-credentials@v4
      with:
        aws-region: us-east-1
        aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
        aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}

    - name: Install kubectl
      uses: azure/setup-kubectl@v4
      with:
        version: 'v1.31.2'

    - name: Install Helm
      uses: azure/setup-helm@v4

    - name: Update kubeconfig
      run: aws eks update-kubeconfig --name $(aws resourcegroupstaggingapi get-resources --tag-filters Key=stack,Values=dev --resource-type-filters eks:cluster --query "ResourceTagMappingList[*].ResourceARN" --output text | awk -F/ '{print $NF}') --alias green

    - name: Read git revision
      id: tag
      run: echo "value=$(git describe --tags --always)" >> $GITHUB_OUTPUT

    - name: Deploy Helm chart
      run: helm upgrade --namespace hello-world --install --create-namespace --set image.tag=${{ steps.tag.outputs.value }} devops-takehome ./helm

    - name: Print service public endpoint
      run: echo "http://$(kubectl --namespace hello-world get svc hello-world -o jsonpath='{.status.loadBalancer.ingress[0].hostname}')/hello-world"
